<?xml version="1.0" encoding="UTF-8"?>
<configuration status="info">
	<properties>

		<Property name="app_name">OfficialWebSite</Property>
		<Property name="log_path">logs/${app_name}</Property>

	</properties>
	<appenders>
		<!-- 控制台输出 -->
		<console name="Console" target="SYSTEM_OUT">
			<!-- <PatternLayout pattern="%highlight{[%d][%t][%p][%l] %m%n}{FATAL=red, 
				ERROR=magenta, WARN=yellow, INFO=green, DEBUG=blue, TRACE=cyan}" /> -->
				<!-- 控制台输出颜色 -->
			<PatternLayout
				pattern="%highlight{[%d{yyyy-MM-dd HH:mm:ss}][%t][%-5level][%c.%method]--%msg%n}{FATAL=red, ERROR=magenta, WARN=yellow, INFO=green, DEBUG=blue, TRACE=cyan}" />

		</console>

		<RollingFile name="RollingFileInfo"
			fileName="${log_path}/info.log"
			filePattern="${log_path}/$${date:yyyy-MM}/info-%d{yyyy-MM-dd}-%i.log.gz">
			<Filters>
				<ThresholdFilter level="INFO" />
				<ThresholdFilter level="WARN" onMatch="DENY"
					onMismatch="NEUTRAL" />
			</Filters>
			<PatternLayout pattern="[%d][%t][%p][%c:%L] %m%n" />
			<Policies>
				<!-- 归档每天的文件 -->
				<TimeBasedTriggeringPolicy interval="1"
					modulate="true" />
				<!-- 限制单个文件大小 -->
				<SizeBasedTriggeringPolicy size="2 MB" />
			</Policies>
			<!-- 限制每天文件个数 -->
			<DefaultRolloverStrategy compressionLevel="0"
				max="10" />
		</RollingFile>

		<RollingFile name="RollingFileWarn"
			fileName="${log_path}/warn.log"
			filePattern="${log_path}/$${date:yyyy-MM}/warn-%d{yyyy-MM-dd}-%i.log.gz">
			<Filters>
				<ThresholdFilter level="WARN" />
				<ThresholdFilter level="ERROR" onMatch="DENY"
					onMismatch="NEUTRAL" />
			</Filters>
			<PatternLayout pattern="[%d][%t][%p][%c:%L] %m%n" />
			<Policies>
				<!-- 归档每天的文件 -->
				<TimeBasedTriggeringPolicy interval="1"
					modulate="true" />
				<!-- 限制单个文件大小 -->
				<SizeBasedTriggeringPolicy size="2 MB" />
			</Policies>
			<!-- 限制每天文件个数 -->
			<DefaultRolloverStrategy compressionLevel="0"
				max="10" />
		</RollingFile>

		<RollingFile name="RollingFileError"
			fileName="${log_path}/error.log"
			filePattern="${log_path}/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log.gz">
			<ThresholdFilter level="ERROR" />
			<PatternLayout pattern="[%d][%t][%p][%c:%L] %m%n" />
			<Policies>
				<!-- 归档每天的文件 -->
				<TimeBasedTriggeringPolicy interval="1"
					modulate="true" />
				<!-- 限制单个文件大小 -->
				<SizeBasedTriggeringPolicy size="2 MB" />
			</Policies>
			<!-- 限制每天文件个数 -->
			<DefaultRolloverStrategy compressionLevel="0"
				max="10" />
		</RollingFile>

	</appenders>

	<loggers>


		<root level="info">
			<appender-ref ref="Console" />
			<appender-ref ref="RollingFileInfo" />
			<appender-ref ref="RollingFileWarn" />
			<appender-ref ref="RollingFileError" />
		</root>

	</loggers>

</configuration>
<!-- =========================================================================================================== -->

<!-- <?xml version="1.0" encoding="UTF-8"?> 日志级别以及优先级排序: OFF > FATAL > ERROR 
	> WARN > INFO > DEBUG > TRACE > ALL status log4j2内部日志级别 <configuration status="INFO"> 
	全局参数 <Properties> <Property name="pattern">%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p 
	%c{1}:%L -%m%n</Property> <Property name="displayName">EurekaServer</Property> 
	</Properties> <Appenders> <Console name="console" target="SYSTEM_OUT" follow="true"> 
	<PatternLayout> <pattern>${pattern}</pattern> </PatternLayout> </Console> 
	文件 每次运行程序会自动清空，由append属性决定 <File name="error" fileName="${displayName}_error.log" 
	append="false"> 指定error 级别的日志 <ThresholdFilter level="ERROR" onMatch="ACCEPT" 
	onMismatch="DENY" /> <PatternLayout> <pattern>${pattern}</pattern> </PatternLayout> 
	</File> 滚动文件 <RollingFile name="rollingFile" fileName="${displayName}.log" 
	filePattern="${displayName}_%d{yyyy-MM-dd}.log"> <PatternLayout> <pattern>${pattern}</pattern> 
	</PatternLayout> 按大小划分 <SizeBasedTriggeringPolicy size="50 MB" /> </RollingFile> 
	</Appenders> <Loggers> <Logger name="org.apache.catalina.util.LifecycleBase" 
	level="ERROR" /> <Logger name="org.apache.coyote.http11.Http11NioProtocol" 
	level="WARN" /> <Logger name="org.apache.tomcat.util.net.NioSelectorPool" 
	level="WARN" /> <Logger name="org.springframework" level="WARN" /> <Logger 
	name="com.after90s" level="DEBUG" /> <Root level="DEBUG"> <AppenderRef ref="console"></AppenderRef> 
	<AppenderRef ref="error"></AppenderRef> <AppenderRef ref="rollingFile"></AppenderRef> 
	</Root> </Loggers> </configuration> -->
<!-- =========================================================================================================== -->


<!-- =========================================================================================================== -->
<!-- <?xml version="1.0" encoding="UTF-8"?> Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出 
	monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数 <configuration monitorInterval="5"> 
	日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL 变量配置 
	<Properties> 格式化输出：%date表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度 %msg：日志消息，%n是换行符 
	%logger{36} 表示 Logger 名字最长36个字符 <property name="LOG_PATTERN" value="%date{HH:mm:ss.SSS} 
	[%thread] %-5level %logger{36} - %msg%n" /> 定义日志存储的路径，不要配置相对路径 <property 
	name="FILE_PATH" value="D:\workspace-sts\OfficialWebSite\logs" /> <property 
	name="FILE_NAME" value="after90s" /> </Properties> <appenders> <console name="Console" 
	target="SYSTEM_OUT"> 输出日志的格式 <PatternLayout pattern="${LOG_PATTERN}"/> 控制台只输出level及其以上级别的信息（onMatch），其他的直接拒绝（onMismatch） 
	<ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/> </console> 
	文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，适合临时测试用 <File name="Filelog" fileName="${FILE_PATH}/test.log" 
	append="false"> <PatternLayout pattern="${LOG_PATTERN}"/> </File> 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 
	<RollingFile name="RollingFileInfo" fileName="${FILE_PATH}/info.log" filePattern="${FILE_PATH}/${FILE_NAME}-INFO-%d{yyyy-MM-dd}_%i.log.gz"> 
	控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） <ThresholdFilter level="info" 
	onMatch="ACCEPT" onMismatch="DENY"/> <PatternLayout pattern="${LOG_PATTERN}"/> 
	<Policies> interval属性用来指定多久滚动一次，默认是1 hour <TimeBasedTriggeringPolicy interval="1"/> 
	<SizeBasedTriggeringPolicy size="10MB"/> </Policies> DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件开始覆盖 
	<DefaultRolloverStrategy max="15"/> </RollingFile> 这个会打印出所有的warn及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 
	<RollingFile name="RollingFileWarn" fileName="${FILE_PATH}/warn.log" filePattern="${FILE_PATH}/${FILE_NAME}-WARN-%d{yyyy-MM-dd}_%i.log.gz"> 
	控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） <ThresholdFilter level="warn" 
	onMatch="ACCEPT" onMismatch="DENY"/> <PatternLayout pattern="${LOG_PATTERN}"/> 
	<Policies> interval属性用来指定多久滚动一次，默认是1 hour <TimeBasedTriggeringPolicy interval="1"/> 
	<SizeBasedTriggeringPolicy size="10MB"/> </Policies> DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件开始覆盖 
	<DefaultRolloverStrategy max="15"/> </RollingFile> 这个会打印出所有的error及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 
	<RollingFile name="RollingFileError" fileName="${FILE_PATH}/error.log" filePattern="${FILE_PATH}/${FILE_NAME}-ERROR-%d{yyyy-MM-dd}_%i.log.gz"> 
	控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） <ThresholdFilter level="error" 
	onMatch="ACCEPT" onMismatch="DENY"/> <PatternLayout pattern="${LOG_PATTERN}"/> 
	<Policies> interval属性用来指定多久滚动一次，默认是1 hour <TimeBasedTriggeringPolicy interval="1"/> 
	<SizeBasedTriggeringPolicy size="10MB"/> </Policies> DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件开始覆盖 
	<DefaultRolloverStrategy max="15"/> </RollingFile> </appenders> Logger节点用来单独指定日志的形式，比如要为指定包下的class指定不同的日志级别等。 
	然后定义loggers，只有定义了logger并引入的appender，appender才会生效 <loggers> 过滤掉spring和mybatis的一些无用的DEBUG信息 
	<logger name="org.mybatis" level="info" additivity="false"> <AppenderRef 
	ref="Console"/> </logger> 监控系统信息 若是additivity设为false，则 子Logger 只会在自己的appender里输出，而不会在 
	父Logger 的appender里输出。 <Logger name="org.springframework" level="info" additivity="false"> 
	<AppenderRef ref="Console"/> </Logger> <root level="info"> <appender-ref 
	ref="Console"/> <appender-ref ref="Filelog"/> <appender-ref ref="RollingFileInfo"/> 
	<appender-ref ref="RollingFileWarn"/> <appender-ref ref="RollingFileError"/> 
	</root> </loggers> </configuration> -->